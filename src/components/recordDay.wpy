<style lang='scss'>
@import "~@/style/style.scss";
.title {
  box-sizing: border-box;
  width: 100%;
  height: 96rpx;
  background-color: white;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12rpx 24rpx;
  color: $ColorPrimary;
  .date {
    font-weight: bold;
    font-size: 32rpx;
  }
  .total {
    display: grid;
    grid-template-rows: auto auto;
    grid-template-columns: auto auto;
    column-gap: 16rpx;
    font-size: 24rpx;
  }
}
.fixed {
  position: fixed;
  top: 0;
  z-index: 2;
}
.space-holder{
  height: 120rpx;
}
.list-wrapper{
  display: flex;
  flex-direction: column-reverse;
  margin-left: 104rpx;
  padding: 32rpx 0rpx;
  border-left: 4rpx solid #D5D1CB;
}
</style>
<template lang="pug">
  .wrapper
    .title(:class="{'fixed': isFixed}")
      .date {{dateString}}
      .total 
        div 🍼{{bottleTotal}}ml 
        div 🤱{{breastTotal}}分钟 
        div 🧷{{diaperTotal}}次 
        div 🛌{{sleepTotal}}小时
    div(:class="{'space-holder': isFixed}")
    .list-wrapper
      recordItem.recordItem(
        v-for='item in records'
        :info='item'
        :time='item.time'
        :class="{'anchor': isAnchor}"
      )
</template>
<script>
import wepy from '@wepy/core';
wepy.component({
  props: {
    records: {
      type: Array,
      default: [{}]
    },
    date: {
      type: String,
      default: ''
    },
    scrollTop: {
      type: Number,
      default: 0,
    },
    date: String,
  },
  data: {
    isFixed: false,
    index: -1,
    isAnchor: false,
  },
  watch: {
    scrollTop (scrollTop) {
      const query = wx.createSelectorQuery().in(this.$wx);
      query.select('.wrapper').boundingClientRect((res)=>{        
        if( res ){
          const { top, height } = res;
          if (top < 0 && height + top > 0) {
            this.isFixed = true;
          } else {
            this.isFixed = false;
          }
        }
      }).exec()
    }
  },
  computed: {
    bottleTotal() {
      return this.records
        .filter(record => record.cate === '喂奶瓶')
        .map(record => record.amount)
        .reduce((acc, cur) => +acc + +cur, 0);
    },
    breastTotal() {
      return this.records
        .filter(record => record.cate === '哺乳')
        .map(record => record.amount)
        .reduce((acc, cur) => +acc + +cur, 0);
    },
    diaperTotal() {
      return this.records
        .filter(record => record.cate === '换尿布')
        .length
    },
    sleepTotal() {
      return this.records
        .filter(record => record.cate === '睡觉')
        .map(record => record.amount)
        .reduce((acc, cur) => +acc + +cur, 0);
    },
    dateString() {
      if(!this.date) {
        return '载入中...';
      }
      const [year, month, day] = this.date.split(',');
      const time = this.$utils.moment([year, month-1, day]);
      
      const thisYear = new Date().getFullYear();
      if (Number(year) !== thisYear) {
        return time.format("YYYY年MM月DD日 dddd");
      }
      
      return time.format("MM月DD日 dddd");}
  },
  methods: {

  },
  attached() {
  }
});
</script>
<config>
{
  usingComponents: {
    'recordItem': '~@/components/recordItem'
  }
}
</config>