<style lang="scss">
@import '~@/style/style.scss';
.container {
  width: 100%;
  height: 100%;
  .opt-panel {
    box-sizing: border-box;
    width: 100%;
    height: 80%;
    background-color: white;
    position: fixed;
    bottom: 0;
    z-index: 2;
    border-top-left-radius: 48rpx;
    border-top-right-radius: 48rpx;
    padding: 48rpx;
    .opt-bar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      height: 64rpx;
      margin-bottom: 32rpx;
      .close-btn {
        text-align: center;
        width: 42rpx;
        height: 42rpx;
        font-size: 36rpx;
        font-weight: bold;
        line-height: 36rpx;
        color: $TextColorTips;
        border-radius: 42rpx;
        border: 2px solid $TextColorTips;
      }
      .opt-btn {
        display: flex;
        align-items: center;
        .btn {
          color: $ColorPrimary;
          line-height: 64rpx;
          font-size: 42rpx;
          font-weight: bold;
          margin-left: 24rpx;
        }
        .delete {
          line-height: 64rpx;
          color: $TextColorTips;
        }
      }
    }
    .amount {
      height: 128rpx;
      font-size: 64rpx;
      padding: 16rpx 0;
    }
    .remark {
      margin-top: 32rpx;
    }
    .input-placeholder {
      color: $TextColorTips;
    }
  }
  .mask {
    position: fixed;
    top: 0;
    z-index: 2;
    width: 100%;
    height: 100%;
    background-color: $ActiveMaskBlack;
  }
}
</style>
<template lang="pug">
.container(v-if='show' catchtouchmove='')
  .mask(@tap='closePanel')
  .opt-panel
    .opt-bar
      .close-btn(@tap='closePanel') x
      .opt-btn
        .btn(v-if='isAdd' @tap='addRecord') 添加
        .delete(v-if='!isAdd' @tap='editRecord') 删除
        .btn(v-if='!isAdd' @tap='deleteRecord') 保存
    dateTimePicker(
      :time='time'
      @update:time='updateTime'
    )
    amountInputer(
      :cate='cate'
      :amount='amount'
      :show='show'
      @update:amount='updateAmount'
    )
    typeSelector.type(
      :selected='type'
      :types='types'
      @update:type='updateType'
    )
    input.remark(
      v-if='show'
      value='{{remark}}'
      bindinput='updateRemark'
      placeholder='填写备注'
      placeholder-class='input-placeholder'
      maxlength='400'
      adjust-position
    )
</template>
<script>
import wepy from '@wepy/core';
wepy.component({
  props: {},
  data: {
    opt: 'add',
    show: false,
    cate: '喂奶瓶',
    time: Date.now(),
    amount: null,
    type: '配方奶',
    remark: ''
  },
  computed: {
    isAdd() {
      return this.opt === 'add'
    },
    types() {
      switch (this.cate) {
        case '喂奶瓶':
          return ['配方奶', '母乳', '水'];
        case '哺乳':
          return ['双侧', '左侧', '右侧'];
        case '换尿布':
          return ['有嘘嘘', '有臭臭', '很干净'];
        case '睡觉':
          return [];
        default:
          return ['配方奶', '母乳'];
      }
    }
  },
  methods: {
    async addRecord() {
      let { cate, time, amount, type, remark = '' } = this;
      amount = Number(amount);

      if (!amount && cate !== '换尿布') {
        wx.showToast({
          icon: 'none',
          title: '数量输入有误～'
        });
        return;
      }

      const record = { cate, amount, remark, type, time };
      const index = this.$store.state.list.length;
      this.$store.dispatch('addRecord', { index, record });
      this.$bus.$emit('refresh:list');
      this.closePanel();
    },
    async editRecord() {
      let { cate, time, amount, remark = '', type, _id, recordIndex } = this;
      amount = Number(amount);

      if (!amount && cate !== '换尿布') {
        wx.showToast({
          icon: 'none',
          title: '数量输入有误～'
        });
        return;
      }

      const record = { cate, time, amount, remark, type, _id };
      this.$store.dispatch('editRecord', { index: recordIndex, record });
      this.$bus.$emit('refresh:list');
      this.closePanel();
    },
    async deleteRecord() {
      await new Promise(resolve => {
        wx.showModal({
          title: '删除记录',
          content: '此操作无法恢复哦～',
          showCancel: true,
          cancelText: '取消',
          cancelColor: '#000000',
          confirmText: '确定',
          confirmColor: '#FA5151',
          success: result => {
            if (result.confirm) {
              resolve();
            }
          }
        });
      });
      const { _id, recordIndex } = this;
      console.log('deleteRecord: _id', _id);

      this.$store.dispatch('removeRecord', { index: recordIndex, id: _id });
      this.$bus.$emit('refresh:list');
      this.triggerShow();
    },
    openPanel({ opt = 'add', cate = '喂奶瓶', record = {} }) {
      console.log(opt, cate, record);
      let selected;
      switch (cate) {
        case '喂奶瓶':
          selected = '配方奶';
        case '哺乳':
          selected = '双侧';
        case '换尿布':
          selected = '有嘘嘘';
        default:
          selected = '配方奶';
      }
      this.opt = opt;
      this.cate = cate;
      this.selected = selected;
      Object.assign(this, record);
      this.show = true;
    },
    closePanel() {
      this.cate = '奶瓶喂养';
      this.time = Date.now();
      this.amount = null;
      this.type = '配方奶';
      this.remark = '';
      this.show = false;
      wx.hideKeyboard({
        success: console.log,
        fail: console.log,
      });
    },
    updateAmount(value) {
      console.log(value);
      
      this.amount = value;
    },
    updateRemark(e) {
      const { value } = e.$wx.detail;
      this.remark = value;
    },
    updateType(type) {
      this.type = type;
    },
    updateTime(time) {
      this.time = time;
    }
  },
  attached() {
    this.$bus.$on('open:panel', this.openPanel.bind(this));
  }
});
</script>
<config>
{
  usingComponents: {
    'typeSelector': '~@/components/typeSelector',
    'dateTimePicker': '~@/components/dateTimePicker',
    'amountInputer': '~@/components/amountInputer'
  }
}
</config>