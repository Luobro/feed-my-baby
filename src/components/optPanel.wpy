<style lang="scss">
@import "~@/style/style.scss";
.container {
  width: 100%;
  height: 100%;
  .back-panel {
    box-sizing: border-box;
    width: 100%;
    height: 80%;
    background-color: white;
    position: fixed;
    bottom: 0;
    z-index: 2;
    border-top-left-radius: 48rpx;
    border-top-right-radius: 48rpx;
    padding: 48rpx;
    .opt-bar {
      display: flex;
      justify-content: flex-end;
      align-items: center;
      height: 64rpx;
    }
    .amount {
      height: 128rpx;
      font-size: 64rpx;
      padding: 16rpx 0;
    }
    .remark {
      padding-bottom: 32rpx;
    }
    .input-placeholder {
      color: $TextColorTips;
    }
  }
  .modal {
    position: fixed;
    top: 0;
    z-index: 1;
    width: 100%;
    height: 100%;
    background-color: $ActiveMaskBlack;
  }
}
</style>
<template lang="pug">
.container(v-if='show' catchtouchmove='')
  .modal(@tap="$emit('trigger:show')")
  .back-panel
    .opt-bar
      slot
    dateTimePicker(
      :time='time'
      @update:time='updateTime'
    )
    input.amount(
      value='{{amount}}'
      bindinput='updateAmount'
      type='number'
      placeholder='输入毫升数'
      placeholder-class='input-placeholder'
      maxlength='3'
      adjust-position
      focus
    )
    input.remark(
      value='{{remark}}'
      bindinput='updateRemark'
      placeholder='填写备注'
      placeholder-class='input-placeholder'
      maxlength='400'
      adjust-position
    )
    typeSelector(
      :selected='type'
      @update:type='updateType'
    )
</template>
<script>
import wepy from '@wepy/core';
wepy.component({
  props: {
    show: {
      type: Boolean,
      default: false
    },
    time: {
      type: Number,
      default: 0
    },
    amount: {
      type: undefined,
      default: null,
    },
    remark: {
      type: undefined,
      default: null,
    },
    type: {
      type: String,
      default: '配方奶'
    }
  },
  data: {},
  computed: {
    timeString() {
      return this.$utils.moment(this.time).format('MM月DD日ahh:mm')
    }
  },
  watch: {

  },
  methods: {
    updateAmount(e) {
      const value = e.$wx.detail.value;
      this.$emit('update:amount', value);
    },
    updateRemark(e) {
      const value = e.$wx.detail.value;
      this.$emit('update:remark', value);
    },
    updateType(value) {
      this.$emit('update:type', value);
    },
    updateTime(value) {
      this.$emit('update:time', value);
    },
    triggerShow() {
      this.$emit('trigger:show');
    },
  },
  attached() {
  }
});
</script>
<config>
{
  usingComponents: {
    'typeSelector': '~@/components/typeSelector',
    'dateTimePicker': '~@/components/dateTimePicker'
  }
}
</config>